/*
The transform property in CSS allows you to apply 2D or 3D transformations to an element,
such as rotating, scaling, skewing, or translating it.
It enhances visual effects and animations.
*/
h1 {
    color: white;
    text-align: center;
    background-color: firebrick;
    border: 4px solid darkslategrey;
    margin: 20px auto;
    padding: 0.4em;
    width: 300px;
}

h1:nth-of-type(2n) {
    background-color: #FF0000;
}

h1:nth-of-type(3n) {
    background-color: #00FF00;
}

h1:nth-of-type(4n) {
    background-color: #0000FF;
}

h1:nth-of-type(5n) {
    background-color: #FFFF00;
}

h1:nth-of-type(6n) {
    background-color: chocolate;
}

h1:nth-of-type(7n) {
    background-color: #FF00FF;
}

h1:nth-of-type(8n) {
    background-color: #FFA500;
}

section:first-of-type h1:nth-of-type(1) {
    transform-origin: center;
    transform: scale(140%) rotate(150deg);
}

section:first-of-type h1:nth-of-type(2) {
    transform-origin: top left;
    transform: rotate(25deg) translateX(100%);
}

section:first-of-type h1:nth-of-type(3) {
    transform-origin: bottom left;
    transform: rotate(75deg) translate(-100%, 0px);
}

section:first-of-type h1:nth-of-type(4) {
    transform-origin: top left;
    transform: scaleX(1) scaleY(1) skew(45deg, -10deg);
}

/*
Rotate will rotate the element user-defined specific degrees or turns.
Remember to use all the required constraints of transform in a single line,
transform-origin is very important, as it is used to pin the position of the element from where properties of transform can be used.
cause cascading is a bit tricky when it comes to transform.
*/